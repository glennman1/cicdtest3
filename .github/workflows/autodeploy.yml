name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MY_DATA_SOURCE: ${{ secrets.DATA_SOURCE }}
      MY_DATA_USERNAME: ${{ secrets.DATA_USER }}
      MY_DATA_PWD: ${{ secrets.DATA_PWD }}`

    steps:
      - name: source code checkout
        uses: actions/checkout@v4

      - name: jdk install # jdk 설치 후 애플리케이션 빌드하기
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin' # java 배포판 설정

      - name: application.yml 생성하기
        run:
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION.YML }}" > src/main/resources/application.yml

      - name: application build # gradle 빌드
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: Docker 이미지 생성 및 태깅
        run: docker build -t ${{ secrets.DOCKER_USER }}/web-app:latest .

      - name: DockerHub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: DockerHub에 생성한 이미지 푸시
        run: docker push ${{ secrets.DOCKER_USER }}/web-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # build 작업이 완료된 후에 실행임ㅇㅇ

    steps: # EC2에 접속
      - name: SSH로 EC2 접속
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            # 도커허브에 토큰으로 로그인
            echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
            # 이미지 풀
            docker pull ${{ secrets.DOCKER_USER }}/web-app:latest
            docker stop web-app || true
            docker rm web-app || true
            # 새로운 컨테이너 실행
            docker run -d -p 8080:8080 --name web-app --network=mynet \
            -e MY_DATA_SOURCE=${{ secrets.DATA_SOURCE }} \
            -e MY_DATA_USERNAME=${{ secrets.DATA_USER }} \
            -e MY_DATA_PWD=${{ secrets.DATA_PWD }} \
            ${{ secrets.DOCKER_USER }}/web-app:latest
            
